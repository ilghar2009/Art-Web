<?phpnamespace App\Http\Controllers;use App\Models\Category;use Illuminate\Http\Request;use Illuminate\Support\Facades\Storage;class CategoryController extends Controller{    public function index(){        $categories = Category::all();        return view('back.category.index', compact('categories'));    }    public function create(){        return view('back.category.create');    }    public function store(Request $request){        $validator = validator()->make($request->all(),[           'title' => ['unique:categories', 'required', 'min:3'],           'description' => ['required', 'min:3'],        ]);        if($validator->fails())            return redirect()->route('category.create')->withErrors($validator)->withInput();        else {            if ($request->hasfile('image')) {                $file = $request->image;                $filename = $file->getClientOriginalName();                Storage::disk('public')->put('img/' . $filename, file_get_contents($file));                $fileUrl = Storage::disk('public')->url('img/' . $filename);            } else {                $filename = null;            }            Category::create([                'title' => $request->title,                'image' => '/storage/img/' . $filename ?? null,                'description' => $request->description ?? null,            ]);            return redirect()->route('category.index');        }    }    public function edit(Category $category){        return view('back.category.edit', compact('category'));    }    public function update(Request $request, Category $category){        $validator = validator()->make($request->all(),[            'title' => ['unique:categories', 'required', 'min:3'],            'description' => ['required', 'min:3'],        ]);        if($validator->fails())            return redirect()->route('category.edit',$category->category_id)->withErrors($validator)->withInput();        else {            $file_image = $category->image;            if ($request->hasFile('image')) {                $file = $request->image;                $filename = $file->getClientOriginalName();                Storage::disk('public')->put('img/' . $filename, file_get_contents($file));                $fileUrl = Storage::disk('public')->url('img/' . $filename);                $file_image = '/storage/img/' . $filename;            }            $category->update([                'title' => $request->title,                'image' => $file_image,                'description' => $request->description ?? $category->description,            ]);            return redirect()->route('category.index');        }    }    public function destroy(Category $category){        $category->delete();        return redirect()->route('category.index');    }}